{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","EventsNumber.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","detailsButton","setState","previousState","event","this","props","className","summary","start","dateTime","timeZone","location","onClick","description","Component","EventList","events","map","id","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","htmlFor","style","display","EventsNumber","numEvents","inputChange","e","eventCount","mockData","removeQuery","window","history","pushState","pathname","newurl","protocol","host","extractLocations","Set","getEvents","a","NProgress","href","startsWith","done","getAccessToken","token","url","axios","get","result","data","localStorage","setItem","JSON","stringify","checkToken","accessToken","fetch","then","res","json","catch","error","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","currentLocation","displayedEvents","slice","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.40a79556.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass Event extends Component{\n   state = {\n      show: false,\n    }\n\n    detailsButton = () => {\n      this.setState((previousState) => ({ show: !previousState.show }));\n    };\n\n   render(){\n      let event = this.props.event;\n      return(\n         <div className=\"event\">\n            <h1 className=\"name\">{event.summary}</h1>\n            <p className=\"EventDate\">{event.start.dateTime} {event.start.timeZone}</p>\n            <p className=\"EventLocation\">{event.location}</p>\n\n            {this.state.show === false && (\n               <button className=\"details-btn\" onClick={() => this.detailsButton()}>\n                  Show Details\n               </button>\n            )}\n\n            {this.state.show === true && (\n               <p className=\"EventDetails\">{event.description}</p>\n            )}\n\n            {this.state.show === true && (\n               <button className=\"hideDetails\" onClick={() => this.detailsButton()}>\n                  Hide Details\n               </button>\n            )}\n            \n\n         </div>\n\n      )\n       \n   }\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport Event from './Event'; \n\nclass EventList extends Component {\n   render(){\n      const { events } = this.props;\n      return (\n         <ul className=\"EventList\">\n         {events.map(event =>\n           <li key={event.id}>\n             <Event event={event} />\n           </li>\n         )}\n       </ul>\n      )\n   }\n}\n\nexport default EventList;","import React, {Component} from 'react';\n\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n  }\n  \n\n   handleInputChanged = (event) => {\n      const value = event.target.value;\n      const suggestions = this.props.locations.filter((location) => {\n        return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n      });\n      this.setState({\n        query: value,\n        suggestions,\n      });\n    };\n\n    handleItemClicked = (suggestion) => {\n      this.setState({\n        query: suggestion,\n        showSuggestions: false,\n      });\n    \n      this.props.updateEvents(suggestion, null);\n    }\n  \n   render() {\n     return (\n      <div className=\"CitySearch\">\n        \n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <label htmlFor='CitySearch'>Search a city for events</label>\n        \n<ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n  {this.state.suggestions.map((suggestion) => (\n    <li\n      key={suggestion}\n      onClick={() => this.handleItemClicked(suggestion)}\n    >{suggestion}</li>\n  ))}\n <li onClick={() => this.handleItemClicked(\"all\")}>\n  <b>See all cities</b>\n</li>\n</ul>\n\n    </div>\n     );\n   }\n }\n \n export default CitySearch;","import React, {Component} from \"react\";\n\nclass EventsNumber extends Component{\n\n     state = {\n         numEvents: 32,\n      };\n\n      //when user changes event number input update numEvents state and call updateEvents\n      inputChange = (e) => {\n         let eventCount = e.target.value;\n         this.setState({\n            numEvents: eventCount,\n         });\n         this.props.updateEvents(null, eventCount);\n      }\n\n      render(){\n         ;\n      return(\n         <div className=\"numberOfEvents\">\n            <input \n               type=\"test\"\n               className=\"EventsNumber\"\n               value = {this.state.numEvents}\n               onChange={this.inputChange}\n            />\n             <label htmlFor=\"numberOfEvents\">number of events</label>\n         </div>\n      )\n   }\n}\n\nexport default EventsNumber;","const mockData = [\n   {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181161784712000\\\"\",\n      \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:17:46.000Z\",\n      \"updated\": \"2020-05-27T12:01:32.356Z\",\n      \"summary\": \"Learn JavaScript\",\n      \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n      \"location\": \"London, UK\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     },\n     {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181159875584000\\\"\",\n      \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:14:30.000Z\",\n      \"updated\": \"2020-05-27T11:45:37.792Z\",\n      \"summary\": \"React is Fun\",\n      \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n      \"location\": \"Berlin, Germany\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     },\n]\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport './nprogress.css';\nimport NProgress from 'nprogress';\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n//removes auth code from url\n const removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n//extract locations from events\n export const extractLocations = (events) => {\n   var extractLocations = events.map((event) => event.location);\n   var locations = [...new Set(extractLocations)];\n   return locations;\n };\n\n //get the various events using serverless getevents function\n export const getEvents = async () => {\n  NProgress.start();\n\n  //if in development and href = localhost return the mockData events\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  const token = await getAccessToken();\n  //if given token then make get call to serverless function to get data and extract locations\n  if (token) {\n    removeQuery();\n    const url = 'https://ddonvi5s3e.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n//verify token\nconst checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n\n  return result;\n};\n\n//get token from local storage and check it\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  //if no access token or error get authorization code\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    //if no auth code make get call to get auth serverless function\n    if (!code) {\n      const results = await axios.get(\n        \"https://ddonvi5s3e.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n\n  return accessToken;\n}\n\n//get the access token from serverless function and store in local storage\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://ddonvi5s3e.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};","import React, { Component }  from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport EventsNumber from './EventsNumber';\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numEvents: 32,\n    currentLocation: 'all'\n  }\n\n  //update events displayed by location or by number of events depending on passed values\n  updateEvents = (location, eventCount ) => {\n    // current state values\n    const { currentLocation, numEvents } = this.state;\n    //get events and filter by location if it's passed in (by default show numEvents)\n    if(location){\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all')\n          ? events :\n          events.filter((event) => event.location === location);\n          //limit displayed number of events by current numEvents state\n          let displayedEvents =  locationEvents.slice(0, numEvents)\n        this.setState({\n          events: displayedEvents,\n          currentLocation: location,\n        });\n      }); \n      //filter events by currentLocation since location wasn't passed in\n    } else {\n      getEvents().then((events)=> {\n        const locationEvents = (currentLocation === 'all')\n        ? events :\n        events.filter(event => event.location === currentLocation);\n        //limit displayed number of events by eventCount if its passed else by numEvents\n        if(eventCount){\n          let displayedEvents = locationEvents.slice(0, eventCount)\n          this.setState({\n            events: displayedEvents\n          })\n          } else {\n            let displayedEvents = locationEvents.slice(0, numEvents)\n            this.setState({\n              events: displayedEvents\n            })\n          }\n      })\n    }\n  }\n\n  //when component mounts, get events then set events and location state\n  componentDidMount() {\n    //get current state of events number\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ \n          events: events.slice(0, this.state.numEvents),\n          locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventsNumber numEvents={this.state.numEvents} updateEvents={this.updateEvents}/>\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('5cd4446dc9d745a591504ff98bc939a5').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}