{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","EventsNumber.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","detailsButton","setState","previousState","event","this","props","className","summary","start","dateTime","timeZone","location","onClick","description","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","OfflineAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","htmlFor","display","EventsNumber","numEvents","errorText","inputChange","e","eventCount","WelcomeScreen","showWelcomeScreen","align","class","src","alt","getAccessToken","rel","href","mockData","getToken","code","a","encodeCode","encodeURIComponent","fetch","then","res","json","catch","error","access_token","localStorage","setItem","accessToken","getItem","checkToken","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","get","axios","results","authUrl","data","result","removeQuery","history","pushState","pathname","newurl","protocol","host","getEvents","NProgress","startsWith","done","navigator","onLine","JSON","parse","token","url","extractLocations","stringify","Set","App","currentLocation","displayedEvents","slice","locationEvents","mounted","isTokenValid","offlineAlert","offlinealert","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.4f5c69b6.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\n\nclass Event extends Component{\n   state = {\n      show: false,\n    }\n\n    detailsButton = () => {\n      this.setState((previousState) => ({ show: !previousState.show }));\n    };\n\n   render(){\n      let event = this.props.event;\n      return(\n         <div className=\"event\">\n            <h1 className=\"name\">{event.summary}</h1>\n            <p className=\"EventDate\">{event.start.dateTime} {event.start.timeZone}</p>\n            <p className=\"EventLocation\">{event.location}</p>\n\n            {this.state.show === false && (\n               <button className=\"details-btn\" onClick={() => this.detailsButton()}>\n                  Show Details\n               </button>\n            )}\n\n            {this.state.show === true && (\n               <p className=\"EventDetails\">{event.description}</p>\n            )}\n\n            {this.state.show === true && (\n               <button className=\"hideDetails\" onClick={() => this.detailsButton()}>\n                  Hide Details\n               </button>\n            )}\n            \n\n         </div>\n\n      )\n       \n   }\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport Event from './Event'; \n\nclass EventList extends Component {\n   render(){\n      const { events } = this.props;\n      return (\n         <ul className=\"EventList\">\n         {events.map(event =>\n           <li key={event.id}>\n             <Event event={event} />\n           </li>\n         )}\n       </ul>\n      )\n   }\n}\n\nexport default EventList;","import React, {Component} from 'react';\n\nclass Alert extends Component {\n   constructor(props){\n      super(props);\n      this.color = null;\n   }\n\n   getStyle = () => {\n      return {\n         color: this.color,\n      };\n   }\n\n   render() {\n      return(\n         <div className=\"Alert\">\n            <p style={this.getStyle()}>{this.props.text}</p>\n         </div>\n      )\n   }\n}\n\nclass InfoAlert extends Alert {\n   constructor(props){\n      super(props);\n      this.color = 'blue';\n   }\n}\n\nclass ErrorAlert extends Alert {\n   constructor(props){\n      super(props);\n      this.color = 'red';\n   }\n}\n\nclass OfflineAlert extends Alert {\n   constructor(props){\n      super(props);\n      this.color = 'red';\n   }\n}\n\nexport { InfoAlert, ErrorAlert, OfflineAlert}","import React, {Component} from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n\n  state = {\n    query: '',\n    suggestions: [],\n    showSuggestions: undefined,\n    infoText: ''\n  }\n  \n\n   handleInputChanged = (event) => {\n      const value = event.target.value;\n      const suggestions = this.props.locations.filter((location) => {\n        return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n      });\n      this.setState({\n        query: value,\n        suggestions,\n      });\n      if(suggestions.length === 0){\n        this.setState({\n          query: value,\n          infoText: 'We can not find the city you are looking for. Please try another city',\n        });\n      } else {\n        return this.setState({\n          query: value,\n          suggestions,\n          infoText: '',\n        });\n      }\n    };\n\n    handleItemClicked = (suggestion) => {\n      this.setState({\n        query: suggestion,\n        showSuggestions: false,\n      });\n    \n      this.props.updateEvents(suggestion, null);\n    }\n  \n   render() {\n     return (\n      <div className=\"CitySearch\">\n        \n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => { this.setState({ showSuggestions: true }) }}\n        />\n        <label htmlFor='CitySearch'>Search a city for events</label>\n\n      <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: { display: 'none' }}>\n        {this.state.suggestions.map((suggestion) => (\n          <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n          >{suggestion}</li>\n        ))}\n      <li onClick={() => this.handleItemClicked(\"all\")}>\n        <b>See all cities</b>\n      </li>\n      </ul>\n      <InfoAlert text={this.state.infoText} />\n    </div>\n     );\n   }\n }\n \n export default CitySearch;","import React, {Component} from \"react\";\nimport { ErrorAlert } from './Alert';\n\nclass EventsNumber extends Component{\n\n     state = {\n         numEvents: 32,\n         errorText: ''\n      };\n\n      //when user changes event number input update numEvents state and call updateEvents\n      inputChange = (e) => {\n         let eventCount = e.target.value;\n         if(eventCount < 1 || eventCount > 32){\n            this.setState({\n               errorText: \"number must be between 1 and 32\"\n            })\n         } else {\n            this.setState({\n               numEvents: eventCount,\n               errorText: ''\n            });\n            this.props.updateEvents(null, eventCount);\n         }\n      }\n\n      render(){\n      return(\n         <div className=\"numberOfEvents\">\n            <input \n               type=\"test\"\n               className=\"EventsNumber\"\n               value = {this.state.numEvents}\n               onChange={this.inputChange}\n            />\n             <label htmlFor=\"numberOfEvents\">number of events</label>\n             <ErrorAlert text={this.state.errorText} />\n         </div>\n      )\n   }\n}\n\nexport default EventsNumber;","import React from \"react\";\nimport './WelcomeScreen.css';\nfunction WelcomeScreen(props) {\n  return props.showWelcomeScreen ?\n    (\n      <div className=\"WelcomeScreen\">\n        <h1>Welcome to the Meet app</h1>\n        <h4>\n          Log in to see upcoming events around the world for\n          full-stack\n          developers\n      </h4>\n        <div className=\"button_cont\" align=\"center\">\n          <div class=\"google-btn\">\n            <div class=\"google-icon-wrapper\">\n              <img\n                class=\"google-icon\"\nsrc=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\no.svg\"\n                alt=\"Google sign-in\"\n              />\n            </div>\n            <button onClick={() => { props.getAccessToken() }}\n              rel=\"nofollow noopener\"\n              class=\"btn-text\"\n            >\n              <b>Sign in with google</b>\n            </button>\n            </div>\n        </div>\n        <a\n          href=\"https://an865.github.io/meet/privacy.html\"\n          rel=\"nofollow noopener\"\n        >\n          Privacy policy\n</a>\n</div> )\n: null }\nexport default WelcomeScreen;\n","const mockData = [\n   {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181161784712000\\\"\",\n      \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:17:46.000Z\",\n      \"updated\": \"2020-05-27T12:01:32.356Z\",\n      \"summary\": \"Learn JavaScript\",\n      \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n      \"location\": \"London, UK\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     },\n     {\n      \"kind\": \"calendar#event\",\n      \"etag\": \"\\\"3181159875584000\\\"\",\n      \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n      \"status\": \"confirmed\",\n      \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n      \"created\": \"2020-05-19T19:14:30.000Z\",\n      \"updated\": \"2020-05-27T11:45:37.792Z\",\n      \"summary\": \"React is Fun\",\n      \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n      \"location\": \"Berlin, Germany\",\n      \"creator\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"organizer\": {\n       \"email\": \"fullstackwebdev@careerfoundry.com\",\n       \"self\": true\n      },\n      \"start\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"end\": {\n       \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n      \"originalStartTime\": {\n       \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n       \"timeZone\": \"Europe/Berlin\"\n      },\n      \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n      \"sequence\": 0,\n      \"reminders\": {\n       \"useDefault\": true\n      },\n      \"eventType\": \"default\"\n     },\n]\n\nexport { mockData };","import { mockData } from './mock-data';\nimport axios from 'axios';\nimport './nprogress.css';\nimport NProgress from 'nprogress';\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\n\n/* Authorization and Authentication */\n\n//get the access token from serverless function if not already in local storage.\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    'https://ddonvi5s3e.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\n//get token from local storage\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  //if no access token or error get authorization code\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    //if no auth code make get call to get auth serverless function\n    if (!code) {\n      const results = await axios.get(\n        \"https://ddonvi5s3e.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n\n  return accessToken;\n}\n\n//check validity of token\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error);\n\n  return result;\n};\n\n//removes authorization code from url once it isn't needed\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\n/*  Get data from API */\n\n\n\n //get the various events using serverless getevents function\n export const getEvents = async () => {\n  NProgress.start();\n\n  //if in development and href = localhost return the mockData events\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return mockData;\n  }\n\n  //if app is offline then load the data from localStorage\n  if (!navigator.onLine) {\n    const data = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return data ? JSON.parse(data).events : [];\n}\n\n   // If the app is online, request an access token and loads the API data.\n  const token = await getAccessToken();\n  //if given token then make get call to serverless function to get data and extract locations\n  if (token) {\n    removeQuery();\n    const url = 'https://ddonvi5s3e.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\n//extract locations from google calendar api\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};","import React, { Component }  from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport EventsNumber from './EventsNumber';\nimport { OfflineAlert } from './Alert';\nimport WelcomeScreen from './WelcomeScreen';\nimport { getEvents, extractLocations, checkToken, getAccessToken } from\n'./api';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numEvents: 32,\n    currentLocation: 'all',\n    showWelcomeScreen: undefined,\n  }\n\n  //update events displayed by location or by number of events depending on passed values\n  updateEvents = (location, eventCount ) => {\n    // current state values\n    const { currentLocation, numEvents } = this.state;\n    //get events and filter by location if it's passed in (by default show numEvents)\n    if(location){\n      getEvents().then((events) => {\n        const locationEvents = (location === 'all')\n          ? events :\n          events.filter((event) => event.location === location);\n          //limit displayed number of events by current numEvents state\n          let displayedEvents =  locationEvents.slice(0, numEvents)\n        this.setState({\n          events: displayedEvents,\n          currentLocation: location,\n        });\n      }); \n      //filter events by currentLocation since location wasn't passed in\n    } else {\n      getEvents().then((events)=> {\n        const locationEvents = (currentLocation === 'all')\n        ? events :\n        events.filter(event => event.location === currentLocation);\n        //limit displayed number of events by eventCount if its passed else by numEvents\n        if(eventCount){\n          let displayedEvents = locationEvents.slice(0, eventCount)\n          this.setState({\n            events: displayedEvents\n          })\n          } else {\n            let displayedEvents = locationEvents.slice(0, numEvents)\n            this.setState({\n              events: displayedEvents\n            })\n          }\n      })\n    }\n  }\n\n  //when component mounts, get events then set events and location state\n  async componentDidMount() {\n    this.mounted = true;\n    //get and validate token from local storage, if none users enter new auth on login. \n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\n    true;\n    const searchParams = new URLSearchParams(window.location.search);\n    //code used after getEvents()\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events: events.slice(0, this.state.numEvents), locations: extractLocations(events) });\n        }\n    }); }\n\n    //alert user of offline status\n    if(!navigator.onLine){\n      this.setState({\n        offlineAlert: 'you are offline, cached data is displayed'\n      })\n    }\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  render(){\n    if (this.state.showWelcomeScreen === undefined) return <div\n    className=\"App\" />\n\n    return (\n      <div className=\"App\">\n         <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\n          getAccessToken={() => { getAccessToken() }} />\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventsNumber numEvents={this.state.numEvents} updateEvents={this.updateEvents}/>\n        <OfflineAlert text={this.state.offlinealert} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\natatus.config('5cd4446dc9d745a591504ff98bc939a5').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n//serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}